version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./robectron-app/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - webnet

  backend:
    build:
      context: ./robectron-app
      dockerfile: Dockerfile
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./robectron-app/api:/app/api
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      DATABASE_URL: ${DATABASE_URL}
    networks:
      - webnet

  frontend:
    build:
      context: ./robectron-store
      dockerfile: Dockerfile
    user: node
    ports:
      - "3000:3000"
    volumes:
      - ./robectron-store:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV}
    stdin_open: true
    tty: true
    depends_on:
      - backend
    networks:
      - webnet

  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${NGINX_CONF_PATH}:/etc/nginx/nginx.conf
      - ${NGINX_CONF_D_PATH}:/etc/nginx/conf.d
      - ${CERTS_PATH}/cfcertificate.pem:/etc/ssl/certs/cfcertificate.pem
      - ${CERTS_PATH}/cfkey.pem:/etc/ssl/private/cfkey.pem
      - ${LOG_PATH}:/var/log/nginx
    depends_on:
      - frontend
      - backend
    environment:
      HOST: ${HOST}
      REMOTE_ADDR: ${REMOTE_ADDR}
      PROXY_ADD_X_FORWARDED_FOR: ${PROXY_ADD_X_FORWARDED_FOR}
      SCHEME: ${SCHEME}
      SERVER_PORT: ${SERVER_PORT}
    networks:
      - webnet

volumes:
  postgres-data:
  nginx_data:
  nginx_config:

networks:
  webnet:
    driver: bridge